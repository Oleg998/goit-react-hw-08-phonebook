{"version":3,"file":"static/js/781.7b0d5c14.chunk.js","mappings":"sNACA,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAgI,0B,4BCK1HA,EAAgB,CAClBC,KAAM,GACNC,MAAO,GACPC,SAAU,IA2Ed,EAxEoB,SAAHC,GAAoB,IAAfC,EAAQD,EAARC,SAElBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIR,IAAgBS,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACZd,EAAgBc,EAAhBd,KAAMe,EAAUD,EAAVC,MACdJ,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIG,GAAK,IAAAM,EAAAA,EAAAA,GAAA,GAAGhB,EAAOe,IAE/B,EASEE,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IACjCC,GAAUF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IAClCE,GAAaH,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IACpCnB,EAA0BU,EAA1BV,KAAOC,EAAmBS,EAAnBT,MAAQC,EAAWQ,EAAXR,SACtB,OACEoB,EAAAA,EAAAA,MAAA,QAAMlB,SAZiB,SAAAmB,GACnBA,EAAEC,iBACFpB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,GAGhB,EAO4Be,UAAWC,EAASC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAUC,SAAC,uBAC1BL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASZ,EAAOU,SAAC,WACxBC,EAAAA,EAAAA,KAAA,SACEb,MAAOf,EACP8B,SAAUlB,EACVa,UAAWC,EACXK,GAAId,EACJe,KAAK,OACLhC,KAAK,OACLiC,UAAQ,EACRC,YAAY,wBAIhBZ,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAAST,EAAQO,SAAC,YACzBC,EAAAA,EAAAA,KAAA,SACEb,MAAOd,EACP6B,SAAUlB,EACVa,UAAWC,EACXK,GAAIX,EACJY,KAAK,QACLhC,KAAK,QACLiC,UAAQ,EACRC,YAAY,yBAGhBZ,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASR,EAAWM,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,SACEb,MAAOb,EACP4B,SAAUlB,EACVa,UAAWC,EACXK,GAAIV,EACJW,KAAK,WACLhC,KAAK,WACLiC,UAAQ,EACRC,YAAY,4BAIhBN,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAASM,KAAK,SAAQL,SAAC,mBAKhD,E,wCCjFA,EAAwB,6B,UCsCxB,EA1BqB,WACnB,IAAMQ,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAcjB,OAVAC,EAAAA,EAAAA,YAAU,WACJJ,GACFK,EAAAA,GAAAA,QAAc,oDAGZP,GACFO,EAAAA,GAAAA,MAAY,0CAEhB,GAAG,CAACL,EAASF,KAGXhB,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAAnB,SAAA,EACEC,EAAAA,EAAAA,KAACmB,EAAW,CAAC3C,SAfI,SAAA4C,GACnBN,GAASO,EAAAA,EAAAA,IAAOD,GAClB,IAauD,IAClDV,IAAWV,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAUC,SAAEW,IACtCH,IAAaP,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,IAAW,MAGtC,C,uDCtCO,IAAMC,EACX,mECmBShC,EAAS,WAGlB,IAHiC,IAAdiC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBtB,EAAK,GACLyB,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWP,IAC3CA,KACLrB,GAAMoB,EAA0B,GAAdK,EAAMJ,IAE1B,OAAOrB,CACT,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/pages/RegisterPage/register-page.module.css?a0d0","pages/RegisterPage/RegisterPage.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"titel\":\"RegisterForm_titel__czu7z\",\"input\":\"RegisterForm_input__FsgBz\",\"btn\":\"RegisterForm_btn__bgTuW\"};","import css from './RegisterForm.module.css';\nimport { useState } from 'react';\nimport { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\n\nconst INITIAL_STATE = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\nconst RegiterForm = ({onSubmit}) => {\n\n    const [state, setState] = useState({ ...INITIAL_STATE });\n\n    const handelChange = ({ target }) => {\n        const { name, value } = target;\n        setState({ ...state, [name]: value });\n        \n      };\n\n      const handelSubmit = e => {\n        e.preventDefault();\n        onSubmit({ ...state });\n\n        \n      };\n\n  const nameId = useMemo(() => nanoid(), []);\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n  const {name , email , password}= state;\n  return (\n    <form onSubmit={handelSubmit} className={css.form}>\n      <h1 className={css.titel}>Form Registration</h1>\n      <div>\n        <label htmlFor={nameId}>Login</label>\n        <input\n          value={name}\n          onChange={handelChange}\n          className={css.input}\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          required\n          placeholder=\"Enter you name \"\n        ></input>\n      </div>\n\n      <div>\n        <label htmlFor={emailId}>Email </label>\n        <input\n          value={email}\n          onChange={handelChange}\n          className={css.input}\n          id={emailId}\n          type=\"email\"\n          name=\"email\"\n          required\n          placeholder=\"Enter you Email \"\n        ></input>\n      </div>\n      <div>\n        <label htmlFor={passwordId}>Password </label>\n        <input\n          value={password}\n          onChange={handelChange}\n          className={css.input}\n          id={passwordId}\n          type=\"password\"\n          name=\"password\"\n          required\n          placeholder=\"Enter you password \"\n        ></input>\n      </div>\n      \n      <button className={css.btn} type=\"submit\">\n        Registration\n      </button>\n    </form>\n  );\n};\n\nexport default RegiterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"register-page_error__59yS0\"};","import RegiterForm from 'components/RegisterForm/RegisterForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signup } from '../../redux/auth/auth-operation';\nimport {\n  selectAuthError,\n  selectAuthIsLoading,\n  selectAuthIsLogin,\n} from '../../redux/auth/auth-selectors';\nimport Loader from 'components/Loader/Loader';\nimport css from './register-page.module.css';\nimport { toast } from 'react-toastify';\nimport { useEffect } from 'react';\n\nconst RegisterPage = () => {\n  const isLoading = useSelector(selectAuthIsLoading);\n  const isError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectAuthIsLogin);\n  const dispatch = useDispatch();\n  const handleSingup = data => {\n    dispatch(signup(data));\n  };\n  useEffect(() => {\n    if (isLogin) {\n      toast.success('Congratulations on your successful registration!');\n    }\n\n    if (isError) {\n      toast.error('An error has occurred. Check your email');\n    }\n  }, [isLogin, isError]);\n\n  return (\n    <>\n      <RegiterForm onSubmit={handleSingup}></RegiterForm>;\n      {isError && <h3 className={css.error}>{isError}</h3>}\n      {isLoading && <Loader></Loader>};\n    </>\n  );\n};\nexport default RegisterPage;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handelChange","_ref2","target","value","_defineProperty","nameId","useMemo","nanoid","emailId","passwordId","_jsxs","e","preventDefault","className","css","children","_jsx","htmlFor","onChange","id","type","required","placeholder","isLoading","useSelector","selectAuthIsLoading","isError","selectAuthError","isLogin","selectAuthIsLogin","dispatch","useDispatch","useEffect","toast","_Fragment","RegiterForm","data","signup","Loader","urlAlphabet","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}